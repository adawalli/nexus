{
  "name": "nexus-mcp",
  "version": "1.0.6",
  "description": "Nexus MCP server - Intelligent AI model search and discovery with OpenRouter integration",
  "main": "dist/index.js",
  "bin": {
    "nexus": "dist/cli.js",
    "nexus-mcp": "dist/cli.js"
  },
  "type": "module",
  "engines": {
    "node": ">=16.0.0"
  },
  "files": [
    "dist/**/*",
    "README.md",
    "LICENSE",
    "package.json"
  ],
  "scripts": {
    "build": "npm-run-all build:clean build:compile build:validate build:cli-setup",
    "build:clean": "cross-env rm -rf dist",
    "build:compile": "tsc",
    "build:validate": "node -e \"console.log('Build validation - checking dist structure'); require('fs').readdirSync('dist').forEach(f => console.log('âœ“', f))\"",
    "build:cli-setup": "echo '#!/usr/bin/env node' > dist/cli.tmp && cat dist/cli.js >> dist/cli.tmp && mv dist/cli.tmp dist/cli.js && chmod +x dist/cli.js",
    "dev": "npm-run-all --parallel dev:watch dev:types",
    "dev:start": "cross-env NODE_ENV=development nodemon --exec ts-node --esm src/index.ts",
    "dev:watch": "cross-env NODE_ENV=development nodemon --exec ts-node --esm src/index.ts",
    "dev:types": "tsc --noEmit --watch",
    "dev:clean": "cross-env rm -rf dist .tsbuildinfo",
    "test": "npm-run-all test:unit test:integration",
    "test:unit": "cross-env NODE_ENV=test vitest run --exclude=tests/integration",
    "test:integration": "cross-env NODE_ENV=test vitest run tests/integration",
    "test:watch": "cross-env NODE_ENV=test vitest",
    "test:ui": "cross-env NODE_ENV=test vitest --ui",
    "test:coverage": "cross-env NODE_ENV=test vitest run --coverage",
    "test:npx:local": "npm pack && npm install -g ./nexus-mcp-*.tgz && nexus --help && npm uninstall -g nexus-mcp",
    "test:npx:published": "npx nexus-mcp@latest --help",
    "release": "npm-run-all release:validate release:build release:publish",
    "release:patch": "standard-version --release-as patch && npm-run-all release:build release:publish",
    "release:minor": "standard-version --release-as minor && npm-run-all release:build release:publish",
    "release:major": "standard-version --release-as major && npm-run-all release:build release:publish",
    "release:validate": "npm-run-all lint format:check type-check secrets:scan test",
    "release:build": "npm run build",
    "release:publish": "npm publish",
    "release:dry-run": "npm publish --dry-run",
    "start": "node dist/index.js",
    "cli": "node dist/cli.js",
    "clean": "npm run build:clean",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --project tsconfig.dev.json --noEmit",
    "secrets:scan": "gitleaks detect --source . --verbose",
    "secrets:scan-staged": "gitleaks protect --source . --verbose",
    "secrets:baseline": "gitleaks detect --source . --report-path .gitleaks-baseline.json",
    "verify": "node scripts/build-verification.js",
    "scripts:list": "echo 'Available script categories:' && echo '' && echo 'ðŸ“¦ BUILD SCRIPTS:' && echo '  build        - Complete production build pipeline' && echo '  build:clean  - Remove dist directory and artifacts' && echo '  build:compile - TypeScript compilation (no bundling)' && echo '  build:validate - Verify build output integrity' && echo '  build:cli-setup - Configure CLI executable' && echo '' && echo 'ðŸ”§ DEVELOPMENT SCRIPTS:' && echo '  dev          - Parallel development with watch & types' && echo '  dev:start    - Development server with hot reload' && echo '  dev:watch    - Watch mode development server' && echo '  dev:types    - TypeScript watch mode type checking' && echo '  dev:clean    - Clean development artifacts' && echo '' && echo 'ðŸ§ª TESTING SCRIPTS:' && echo '  test         - Complete test suite (unit + integration)' && echo '  test:unit    - Unit tests only' && echo '  test:integration - Integration tests only' && echo '  test:watch   - Interactive test watch mode' && echo '  test:ui      - Vitest UI for test management' && echo '  test:coverage - Tests with coverage reporting' && echo '  test:npx:local - Test local NPX installation' && echo '  test:npx:published - Test published NPX functionality' && echo '' && echo 'ðŸš€ RELEASE SCRIPTS:' && echo '  release      - Complete release workflow' && echo '  release:patch - Automated patch release' && echo '  release:minor - Automated minor release' && echo '  release:major - Automated major release' && echo '  release:validate - Pre-release validation' && echo '  release:dry-run - Test publish without publishing' && echo '' && echo 'âœ¨ QUALITY SCRIPTS:' && echo '  lint         - ESLint code quality checks' && echo '  lint:fix     - Auto-fix linting issues' && echo '  format       - Prettier code formatting' && echo '  format:check - Check Prettier formatting' && echo '  type-check   - TypeScript type validation' && echo '' && echo 'For detailed descriptions, see CLAUDE.md'",
    "prepublishOnly": "npm run release:validate"
  },
  "keywords": [
    "mcp",
    "nexus",
    "openrouter",
    "ai",
    "models",
    "search",
    "discovery",
    "model-context-protocol"
  ],
  "author": "Adam Wallis",
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/adawalli/nexus.git"
  },
  "homepage": "https://github.com/adawalli/nexus#readme",
  "bugs": {
    "url": "https://github.com/adawalli/nexus/issues"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.13.0",
    "axios": "^1.10.0",
    "data-masking": "^1.0.3",
    "dotenv": "^16.5.0",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.29.0",
    "@types/node": "^24.0.3",
    "@typescript-eslint/eslint-plugin": "^8.34.1",
    "@typescript-eslint/parser": "^8.34.1",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "cross-env": "^7.0.3",
    "eslint": "^9.29.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-unused-imports": "^4.1.4",
    "msw": "^2.10.2",
    "nodemon": "^3.1.10",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.5.3",
    "standard-version": "^9.5.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "vitest": "^3.2.4"
  }
}
